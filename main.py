"""
@author: Ahmed Ramadan

"""

import numpy as np
import cv2
import time
import numpy as np
import threading

from playsound import playsound  # pip install playsound==1.2.2

fire_cascade = cv2.CascadeClassifier('cascade//fire_detection.xml') # this file is generated by 'Ahmed Ramadan' By 'Cascade-trainer-GUI'


#cascade.xml is the classifier file that contains the parameters of classifier
#checks for fire detection



fire_repoted=0
Alarm_Status=False

def run_warn():
	playsound("sound//warn.mp3",block=True)
	  
	  


cap = cv2.VideoCapture(0)  # start video capturing
background_image=cv2.imread("images//back.png")
count = 0
while cap.isOpened():
	global x
	ret, img = cap.read() #capture a frame
	# img=cv2.resize(img,(1000,600))
	   # Another Code #
	
	
	# blur=cv2.GaussianBlur(img,(15,15),0)
	# hsv=cv2.cvtColor(blur,cv2.COLOR_RGB2HSV)
	# lower=[18,50,50]
	# upper = [35, 255, 255]
	# lower=np.array(lower,dtype="uint8")
	# upper=np.array(upper,dtype="uint8")
	# mask=cv2.inRange(hsv,lower,upper)
	# output=cv2.bitwise_and(img,hsv,mask=mask)
	
	# num_of_total=cv2.countNonZero(mask)
	# print(num_of_total)
	
	# if int(num_of_total) > 15000:
	#     run_warn()
		# fire_repoted+=1
		# if fire_repoted >=1:
		#     if alarm_status==False:
			   
				# alarm_status=True
				
		 # Another Code #                  disable from line (63) to line (72)
	
	background_image[180:180+480, 55:55+640] = img
	gray = cv2.cvtColor(background_image,cv2.COLOR_BGR2GRAY) #convert image to grayscale
	fire = fire_cascade.detectMultiScale(img, 1.5, 5) #test for fire detection
	for (x,y,w,h) in fire:
		roi_gray = gray[y:y+h, x:x+w]
		roi_color = background_image[y:y+h, x:x+w]
		background_image=cv2.rectangle(background_image,(x,y),(x+100,y+350),(0,0,255),2,2) #highlight the area of image with fire
		cv2.putText(background_image, 'Fire is detected..!',(x, y),2,1, (0, 0, 255), 2)
		print( 'Fire is detected..!' + str(count)) 
		x=threading.Thread(target=run_warn).start()
		count+=1
		
				
				
	 
	cv2.imshow('Fire_Detector', background_image)
	k = cv2.waitKey(100) & 0xff
	if k == 27:
	   break

# ser1.close()
cap.release()
cv2.destroyAllWindows()

